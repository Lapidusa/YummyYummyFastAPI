project/
│
├── app/
│   ├── api/                     # Контроллеры (роуты)
│   │   ├── v1/                  # Версии API
│   │   │   ├── endpoints/       # Эндпоинты (например, orders.py, users.py)
│   │   │   └── __init__.py
│   │   └── __init__.py
│   │
│   ├── core/                    # Основная логика приложения
│   │   ├── config.py            # Конфигурация приложения (например, настройки базы данных, JWT)
│   │   ├── security.py          # Логика безопасности (JWT, роли)
│   │   └── __init__.py
│   │
│   ├── db/                      # Работа с базой данных
│   │   ├── base.py              # Базовые настройки SQLAlchemy
│   │   ├── models/              # Модели базы данных
│   │   │   ├── order.py
│   │   │   ├── user.py
│   │   │   └── __init__.py
│   │   ├── migrations/          # Миграции базы данных (например, Alembic)
│   │   └── __init__.py
│   │
│   ├── services/                # Бизнес-логика
│   │   ├── order_service.py     # Логика обработки заказов
│   │   ├── user_service.py      # Логика работы с пользователями
│   │   └── __init__.py
│   │
│   ├── schemas/                 # DTO (Pydantic-схемы)
│   │   ├── order.py             # Схемы для заказов
│   │   ├── user.py              # Схемы для пользователей
│   │   └── __init__.py
│   │
│   └── __init__.py
│
├── tests/                       # Тесты
│   ├── test_api/                # Тесты API
│   ├── test_services/           # Тесты бизнес-логики
│   └── __init__.py
│
├── main.py                      # Точка входа в приложение
├── requirements.txt             # Зависимости проекта
└── alembic.ini                  # Конфигурация Alembic для миграций


from geoalchemy2 import types as geo_types

sa.Column('area', geo_types.Geometry(geometry_type='POLYGON', from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),